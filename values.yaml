# Default values for storage-migration.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: 334301710522.dkr.ecr.eu-central-1.amazonaws.com/complex-migrations
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "SNAPSHOT-11"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podSecurityContext: {}
  # fsGroup: 2000
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
nodeSelector: {}
tolerations: []
affinity: {}

resources:
  limits:
    cpu: 500m
    memory: 1024Mi
  requests:
    cpu: 100m
    memory: 512Mi

## Migrations types
## 1. "single": from multi to single (supports s3 and minio)
## 2. "s3": from single minio to single s3.
migrationType: single
# migrationType: s3
storage:
  removeAfterMigration: true
  minio:
    secretName: ""
    endpoint: http://<minio-release-name>-minio.default.svc.cluster.local:9000
    accesskey: <minio-accesskey>
    secretkey: <minio-secretkey>
    accesskeyName: "access-key"
    secretkeyName: "secret-key"
  s3:
    secretName: ""
    region: "eu-west-3"
    ## Endpoints list ref: https://docs.aws.amazon.com/general/latest/gr/s3.html
    endpoint: "http://s3.eu-central-1.amazonaws.com"
    accesskey: <s3-accesskey>
    secretkey: <s3-secretkey>
    accesskeyName: "s3-access-key"
    secretkeyName: "s3-secret-key"
  bucket:
    bucketPrefix: "prj-"
    ## bucket name for storing Plugins
    bucketForPlugins: "rp-bucket"
    ## A new single bucket to which the data will be migrated
    bucketMinioSingleName: "rp-storage"
    ## S3 bucket where will be data migrated from MinIO
    bucketS3SingleName: "rp-s3-storge"

postgresql:
  SecretName: ""
  endpoint:
    address: <postgresql-release-name>-postgresql.default.svc.cluster.local
    port: 5432
    user: rpuser
    dbName: reportportal
    password:
    ## Number of database connections
    connections: 